systemConfig:
  logger:
    level: debug

http:
  port: 8080

admin:
  port: 9876
  host: localhost

apiEndpoints:
  auth:
    host: localhost
    paths:
      - /auth/*
  users:
    host: localhost
    paths:
      - /users/*
  product:
    host: localhost
    paths:
      - /product/*
  orders:
    host: localhost
    paths:
      - /orders/*
      - /orders

  # âœ… Health Endpoints
  health-auth:
    host: localhost
    paths:
      - /health/auth
  health-users:
    host: localhost
    paths:
      - /health/users
  health-product:
    host: localhost
    paths:
      - /health/product
  health-orders:
    host: localhost
    paths:
      - /health/orders

serviceEndpoints:
  auth-service:
    url: ${AUTH_SERVICE_URL}/api
  user-service:
    url: ${USER_SERVICE_URL}
  product-service:
    url: ${PRODUCT_SERVICE_URL}
  order-service:
    url: ${ORDER_SERVICE_URL}

  # âœ… Health Service Endpoints
  auth-health:
    url: ${AUTH_HEALTH_URL}
  users-health:
    url: ${USERS_HEALTH_URL}
  product-health:
    url: ${PRODUCT_HEALTH_URL}
  orders-health:
    url: ${ORDERS_HEALTH_URL}

policies:
  - jwt-auth   # ðŸ‘ˆ your custom policy
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit

pipelines:
  auth-pipeline:
    apiEndpoints:
      - auth
    policies:
      - proxy:
          - action:
              serviceEndpoint: auth-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Auth request received'

  user-pipeline:
    apiEndpoints:
      - users
    policies:
      - log:
          - action:
              message: "Incoming user request:"
      - jwt-auth: {}
      - proxy:
          - action:
              serviceEndpoint: user-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"

  product-pipeline:
    apiEndpoints:
      - product
    policies:
      - jwt-auth: {}
      - proxy:
          - action:
              serviceEndpoint: product-service
              changeOrigin: true
              stripPath: true
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Product request received'

  order-pipeline:
    apiEndpoints:
      - orders
    policies:
      - log:
          - action:
              message: "Incoming order request: ${req.method} ${req.originalUrl}"
      - jwt-auth: {}
      - rate-limit:
          - action:
              max: 100
              windowMs: 60000   # 100 requests per minute per user
      - proxy:
          - action:
              serviceEndpoint: order-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Order request received'

  # âœ… Health Pipelines
  health-auth-pipeline:
    apiEndpoints:
      - health-auth
    policies:
      - proxy:
          - action:
              serviceEndpoint: auth-health
              changeOrigin: true
              stripPath: true

  health-users-pipeline:
    apiEndpoints:
      - health-users
    policies:
      - proxy:
          - action:
              serviceEndpoint: users-health
              changeOrigin: true
              stripPath: true

  health-product-pipeline:
    apiEndpoints:
      - health-product
    policies:
      - proxy:
          - action:
              serviceEndpoint: product-health
              changeOrigin: true
              stripPath: true

  health-orders-pipeline:
    apiEndpoints:
      - health-orders
    policies:
      - proxy:
          - action:
              serviceEndpoint: orders-health
              changeOrigin: true
              stripPath: true
