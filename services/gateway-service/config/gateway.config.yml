systemConfig:
  logger:
    level: debug

http:
  port: 8080

admin:
  port: 9876
  host: localhost

apiEndpoints:
  auth-public:
    host: localhost
    paths:
      - /auth/login
      - /auth/register
      - /auth/public-key
  auth-protected:
    host: localhost
    paths:
      - /auth/me
      - /auth/logout
      - /auth/users/:id/role
      - /auth/create-admin
  users:
    host: localhost
    paths:
      - /users/*
  product:
    host: localhost
    paths:
      - /products*
  orders:
    host: localhost
    paths:
      - /orders
      - /orders/
      - /orders/*
  cart:
    host: localhost
    paths:
      - /cart/*
      - /cart
  payments:
    host: localhost
    paths:
      - /payments
      - /payments/*

  # ✅ Health Endpoints
  health-auth:
    host: localhost
    paths:
      - /health/auth
  health-users:
    host: localhost
    paths:
      - /health/users
  health-product:
    host: localhost
    paths:
      - /health/product
  health-orders:
    host: localhost
    paths:
      - /health/orders
  health-cart:
    host: localhost
    paths:
      - /health/cart
  health-payments:
    host: localhost
    paths:
      - /health/payments

serviceEndpoints:
  auth-service:
    url: ${AUTH_SERVICE_URL}/api
  user-service:
    url: ${USER_SERVICE_URL}/api
  product-service:
    url: ${PRODUCT_SERVICE_URL}/api
  order-service:
    url: ${ORDER_SERVICE_URL}/api
  cart-service:
    url: ${CART_SERVICE_URL}/api
  payment-service:
    url: ${PAYMENT_SERVICE_URL}/api

  # ✅ Health Service Endpoints
  auth-health:
    url: ${AUTH_HEALTH_URL}
  users-health:
    url: ${USERS_HEALTH_URL}
  product-health:
    url: ${PRODUCT_HEALTH_URL}
  orders-health:
    url: ${ORDERS_HEALTH_URL}
  cart-health:
    url: ${CART_HEALTH_URL}
  payments-health:
    url: ${PAYMENTS_HEALTH_URL}

policies:
  - jwt-auth
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit

pipelines:
  auth-public-pipeline:
    apiEndpoints:
      - auth-public
    policies:
      - log:
          - action:
               message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: auth-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Auth public request received'

  auth-protected-pipeline:
    apiEndpoints:
      - auth-protected
    policies:
      - log:
          - action:
               message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - jwt-auth: {}
      - proxy:
          - action:
              serviceEndpoint: auth-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Auth protected request received'

  user-pipeline:
    apiEndpoints:
      - users
    policies:
      - log:
          - action:
               message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - jwt-auth: {}
      - proxy:
          - action:
              serviceEndpoint: user-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"

  product-pipeline:
    apiEndpoints:
      - product
    policies:
      - log:
          - action:
               message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - jwt-auth: {}
      - proxy:
          - action:
              serviceEndpoint: product-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Product request received'

  order-pipeline:
    apiEndpoints:
      - orders
    policies:
      - log:
          - action:
              message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - jwt-auth: {}
      - rate-limit:
          - action:
              max: 100
              windowMs: 60000   # 100 requests per minute per user
      - proxy:
          - action:
              serviceEndpoint: order-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Order request received'

  cart-pipeline:
    apiEndpoints:
      - cart
    policies:
      - log:
          - action:
             message: "Incoming order request: ${req.method} ${req.protocol}://${req.headers.host}${req.originalUrl}"
      - jwt-auth: {}
      - rate-limit:
          - action:
              max: 150
              windowMs: 60000
      - proxy:
          - action:
              serviceEndpoint: cart-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"
      - log:
          - action:
              message: 'Cart request processed'
  
  payment-pipeline:
    apiEndpoints:
      - payments
    policies:
      - log:
          - action:
              message: "Incoming payment request: ${req.method} ${req.originalUrl}"
      - jwt-auth: {}
      - rate-limit:
          - action:
              max: 80
              windowMs: 60000
      - proxy:
          - action:
              serviceEndpoint: payment-service
              changeOrigin: true
              stripPath: false
      - cors:
          - action:
              origin: "*"


  # ✅ Health Pipelines
  health-auth-pipeline:
    apiEndpoints:
      - health-auth
    policies:
      - proxy:
          - action:
              serviceEndpoint: auth-health
              changeOrigin: true
              stripPath: true

  health-users-pipeline:
    apiEndpoints:
      - health-users
    policies:
      - proxy:
          - action:
              serviceEndpoint: users-health
              changeOrigin: true
              stripPath: true

  health-product-pipeline:
    apiEndpoints:
      - health-product
    policies:
      - proxy:
          - action:
              serviceEndpoint: product-health
              changeOrigin: true
              stripPath: true

  health-orders-pipeline:
    apiEndpoints:
      - health-orders
    policies:
      - proxy:
          - action:
              serviceEndpoint: orders-health
              changeOrigin: true
              stripPath: true
              
  health-cart-pipeline:
    apiEndpoints:
      - health-cart
    policies:
      - proxy:
          - action:
              serviceEndpoint: cart-health
              changeOrigin: true
              stripPath: true
  
  health-payments-pipeline:
    apiEndpoints:
      - health-payments
    policies:
      - proxy:
          - action:
              serviceEndpoint: payments-health
              changeOrigin: true
              stripPath: true
